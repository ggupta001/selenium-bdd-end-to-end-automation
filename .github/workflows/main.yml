name: Run Selenium BDD Feature Files
on:
  workflow_dispatch:
    inputs:
      feature:
        description: 'Select a feature file to run'
        required: true
        default: 'RegisterPageTest'  # Default feature to run (can be changed)
        type: choice  # Dropdown for feature selection
        options:
          - RegisterPageTest
          - LoginPageTest
          - all  # Option to run all features
  push:
    branches:
      - master  # Trigger on push to the 'master' branch

jobs:
  run-feature:
    runs-on: ubuntu-latest

    env:
      # Set environment variables that can be accessed by any step in the job
      USER_NAME: ${{ secrets.USER_NAME }}  # Use GitHub Secrets for sensitive information
      USER_PASSWORD: ${{ secrets.USER_PASSWORD }}  # Use GitHub Secrets for sensitive information
      API_KEY: ${{ secrets.MY_API_KEY }}  # Example of another secret

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3  # Latest version of checkout action

      # Step 2: Cache Maven dependencies to speed up future builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3  # Use the latest version of cache action
        with:
          path: ~/.m2/repository  # Cache Maven repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Cache key based on pom.xml hash
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 3: Set up JDK (Adoptium Temurin)
      - name: Set up JDK (Adoptium Temurin)
        uses: actions/setup-java@v2
        with:
          java-version: '21'  # Java SE 21 (LTS) or change to '17' for Java SE 17 (LTS)
          distribution: 'temurin'  # Use Adoptium Temurin for OpenJDK

      # Step 4: Install Maven using apt
      - name: Install Maven
        run: |
          sudo apt update
          sudo apt install maven  # Install Maven using apt

      # Step 5: Install project dependencies using Maven (if not already cached)
      - name: Install Dependencies (Maven)
        run: |
          mvn clean install  # This installs dependencies from your pom.xml

      # Step 6: Securely use credentials from GitHub Secrets
      - name: Use secrets (e.g., API key, DB password)
        run: |
          echo "Using secure credentials from GitHub Secrets..."
          echo "API Key: ${{ secrets.MY_API_KEY }}"  # Access your secret by referencing the secret name
          echo "DB Password: ${{ secrets.DB_PASSWORD }}"

      # Step 7: Run the selected Cucumber Feature file or all feature files
      - name: Run Cucumber Feature
        run: |
          echo "Running feature files based on input: ${{ github.event.inputs.feature }}"
          
          # Check if the input is 'all' or a specific feature file
          if [ "${{ github.event.inputs.feature }}" == "all" ]; then
            # Run all feature files in the features directory
            mvn test -Dcucumber.options="classpath:features"
          else
            # Run the specific feature file as passed in the input
            mvn test -Dcucumber.options="classpath:features/${{ github.event.inputs.feature }}.feature"
          fi
