name: Run Selenium BDD Feature Files

on:
  workflow_dispatch:
    inputs:
      feature:
        description: 'Select a feature file to run'
        required: true
        default: 'RegisterPageTest'
        type: choice
        options:
          - RegisterPageTest
          - LoginPageTest
          - all
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  run-feature:
    runs-on: ubuntu-latest

    env:
      USER_NAME: ${{ secrets.USER_NAME }}
      USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      SENDGRID_SENDER_EMAIL: ${{ secrets.SENDGRID_SENDER_EMAIL }}
      RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK (Adoptium Temurin)
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Maven
        run: |
          sudo apt update
          sudo apt install maven

      - name: Install Dependencies (Maven)
        run: |
          mvn clean install

      - name: Verify secrets are set (without exposing them)
        run: |
          echo "Verifying secrets are available without revealing sensitive data"
          if [ -z "$USER_NAME" ]; then
            echo "USER_NAME is not set"
          fi
          if [ -z "$USER_PASSWORD" ]; then
            echo "USER_PASSWORD is not set"
          fi

      - name: Run Cucumber Feature
        id: run_tests
        run: |
          echo "Running feature files based on input: ${{ github.event.inputs.feature }}"
          if [ "${{ github.event.inputs.feature }}" == "all" ]; then
            mvn clean test -Dcucumber.options="classpath:features"
          else
            mvn clean test -Dcucumber.options="classpath:features/${{ github.event.inputs.feature }}.feature"
          fi
          echo "Test execution completed"

      - name: Check for cucumber.json file
        run: |
          if [ ! -f target/cucumber.json ]; then
            echo "cucumber.json file not found! Aborting."
            exit 1
          fi

      - name: Install jq to parse JSON
        run: |
          sudo apt-get install jq

      - name: Parse cucumber.json results
        id: parse_results
        run: |
          # Parse cucumber.json and extract feature name, pass and fail counts
          FEATURE_RESULTS=$(cat target/cucumber.json | jq -r '.[] | {name: .name, passed: (.elements | map(select(.steps[].result.status == "passed")) | length), failed: (.elements | map(select(.steps[].result.status == "failed")) | length)}')
          
          # Output the feature results to debug and verify
          echo "$FEATURE_RESULTS"

          # Prepare the email body with feature names and pass/fail counts
          BODY="Test Results Summary:\n\n"
          
          # Loop through the parsed feature results and append details to BODY
          for feature in $(echo "$FEATURE_RESULTS" | jq -r '. | @base64'); do
            _jq() {
              echo ${feature} | base64 --decode | jq -r ${1}
            }
            FEATURE_NAME=$(_jq '.name')
            PASSED=$(_jq '.passed')
            FAILED=$(_jq '.failed')

            BODY="$BODY\nFeature: $FEATURE_NAME\nPassed: $PASSED\nFailed: $FAILED\n"
          done

          # Save the final BODY to the environment
          echo "BODY=$BODY" >> $GITHUB_ENV

      - name: Send Test Result Email
        if: ${{ always() }}  # Ensure it runs even if tests fail
        run: |
          # Send email using SendGrid API
          curl -X POST "https://api.sendgrid.com/v3/mail/send" \
            -H "Authorization: Bearer $SENDGRID_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "personalizations": [{
                "to": [{"email": "'"${{ secrets.RECIPIENT_EMAIL }}"'"}],
                "subject": "Cucumber Test Results"
              }],
              "from": {"email": "'"${{ secrets.SENDGRID_SENDER_EMAIL }}"'"},
              "content": [{
                "type": "text/plain",
                "value": "'"${{ env.BODY }}"'"
              }]
            }'
